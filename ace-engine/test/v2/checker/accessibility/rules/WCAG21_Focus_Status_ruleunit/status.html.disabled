<!DOCTYPE html>
<html lang="en">
	<head>
		<title>Using role=status to provide status message on search results</title>
	</head>
	<body>
		<script>
			function findOrange () {
				document.getElementById("resultsmsg").innerHTML = "0 results returned";
				document.getElementById("resultsmsg2").innerHTML = "0 results returned";
			}
			
		</script>
		<div role="main">
			<h1>Using <code>role=status</code> to Provide Status Message on Search Results</h1>
			<p>This demonstrates how messages about search results are returned and surfaced using the aria <code>status</code> role. After a user presses a Search button, the page content pretends to do a search for words that rhyme with "orange". None are returned, which results in a change to content, the message "0 results returned". This text is given an appropriate role for a status message. A screen reader should announce "Zero results returned".</p>	
			<hr>
			<div role="search"><label for="mockinput">Search for words that rhyme with: <input type="text" name="mockinput" id="mockinput" value="orange"></label> <button id="btn" onclick="findOrange()">Search</button>
			</div>
			<h2>Results</h2>

			<p role="status" id="resultsmsg" tabindex="0"></p>
			<p role="status" id="resultsmsg2" ></p>
	
		</div>

<script type="text/javascript">
//<![CDATA[
  if (typeof(OpenAjax) == 'undefined') OpenAjax = {}
  if (typeof(OpenAjax.a11y) == 'undefined') OpenAjax.a11y = {}
  OpenAjax.a11y.ruleCoverage = [
    {
      ruleId: "1201",
      passedXpaths: [
      ],
      failedXpaths: [
          "/html/body/div/p[2]"
      ]
    }
  ];
//]]>
</script>
	</body>
	</html>
